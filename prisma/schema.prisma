// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Operafy {
  id        Int      @id @default(autoincrement())
  users     User[]
  albums    Album[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model User {
  id        Int        @id @default(autoincrement())
  firstname String
  lastname  String
  email     String     @unique
  password  String
  operafy   Operafy    @relation(fields: [operafyId], references: [id])
  operafyId Int
  playlists Playlist[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
}

model Album {
  id          Int      @id @default(autoincrement())
  operafy     Operafy  @relation(fields: [operafyId], references: [id])
  operafyId   Int
  albumName   String
  releaseDate DateTime
  songs       Song[]
  artists     Artist[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Playlist {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  songs     Song[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Song {
  id         Int       @id @default(autoincrement())
  artists    Artist[]
  length     Int
  title      String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  Album      Album?    @relation(fields: [albumId], references: [id])
  albumId    Int?
  Playlist   Playlist? @relation(fields: [playlistId], references: [id])
  playlistId Int?
}

model Artist {
  id        Int      @id @default(autoincrement())
  songs     Song[]
  albums    Album[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
